{"version":3,"file":"msal.interceptor.d.ts","sources":["msal.interceptor.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from \"@angular/common/http\";\nimport { Location } from \"@angular/common\";\nimport { Observable } from \"rxjs\";\nimport { MsalService } from \"./msal.service\";\nimport { MsalInterceptorConfiguration } from \"./msal.interceptor.config\";\nimport { MsalBroadcastService } from \"./msal.broadcast.service\";\nexport declare class MsalInterceptor implements HttpInterceptor {\n    private msalInterceptorConfig;\n    private authService;\n    private location;\n    private msalBroadcastService;\n    private _document?;\n    constructor(msalInterceptorConfig: MsalInterceptorConfiguration, authService: MsalService, location: Location, msalBroadcastService: MsalBroadcastService, document?: any);\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n    /**\n     * Try to acquire token silently. Invoke interaction if acquireTokenSilent rejected with error or resolved with null access token\n     * @param authRequest Request\n     * @param scopes Array of scopes for the request\n     * @param account Account\n     * @returns Authentication result\n     */\n    private acquireToken;\n    /**\n     * Invoke interaction for the given set of scopes\n     * @param authRequest Request\n     * @param scopes Array of scopes for the request\n     * @returns Result from the interactive request\n     */\n    private acquireTokenInteractively;\n    /**\n     * Looks up the scopes for the given endpoint from the protectedResourceMap\n     * @param endpoint Url of the request\n     * @param httpMethod Http method of the request\n     * @returns Array of scopes, or null if not found\n     *\n     */\n    private getScopesForEndpoint;\n    /**\n     * Finds resource endpoints that match request endpoint\n     * @param protectedResourcesEndpoints\n     * @param endpoint\n     * @returns\n     */\n    private matchResourcesToEndpoint;\n    /**\n     * Transforms relative urls to absolute urls\n     * @param url\n     * @returns\n     */\n    private getAbsoluteUrl;\n    /**\n     * Finds scopes from first matching endpoint with HTTP method that matches request\n     * @param protectedResourceMap Protected resource map\n     * @param endpointArray Array of resources that match request endpoint\n     * @param httpMethod Http method of the request\n     * @returns\n     */\n    private matchScopesToEndpoint;\n}\n"]}